{"ast":null,"code":"import _slicedToArray from \"I:\\\\node_projects\\\\bmzn\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"I:\\\\node_projects\\\\bmzn\\\\frontend\\\\src\\\\PaymentMethodScreen.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport CheckoutSteps from './CheckoutSteps';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from './Store';\n\nfunction PaymentMethodScreen() {\n  var navigate = useNavigate();\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      ctxDispatch = _useContext.dispatch;\n\n  var _state$cart = state.cart,\n      shippingAddress = _state$cart.shippingAddress,\n      paymentMethod = _state$cart.paymentMethod;\n\n  var _useState = useState(paymentMethod || 'PayPal'),\n      _useState2 = _slicedToArray(_useState, 2),\n      paymentMethodName = _useState2[0],\n      setPaymentMethod = _useState2[1];\n\n  useEffect(function () {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [shippingAddress, navigate]);\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault();\n    ctxDispatch({\n      type: 'SAVE_PAYMENT_METHOD',\n      payload: paymentMethodName\n    });\n    localStorage.setItem('paymentMethod', paymentMethodName);\n    navigate('/placeorder');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    step3: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container small-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Payment Method\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    id: \"PayPal\",\n    label: \"PayPal\",\n    value: \"PayPal\",\n    checked: paymentMethodName === 'PayPal',\n    onChange: function onChange(e) {\n      return setPaymentMethod(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"radio\",\n    id: \"Stripe\",\n    label: \"Stripe\",\n    value: \"Stripe\",\n    checked: paymentMethodName === 'Stripe',\n    onChange: function onChange(e) {\n      return setPaymentMethod(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Continue\")))));\n}\n\nexport default PaymentMethodScreen;","map":{"version":3,"sources":["I:/node_projects/bmzn/frontend/src/PaymentMethodScreen.js"],"names":["React","useContext","useEffect","useState","CheckoutSteps","Helmet","Form","Button","useNavigate","Store","PaymentMethodScreen","navigate","state","ctxDispatch","dispatch","cart","shippingAddress","paymentMethod","paymentMethodName","setPaymentMethod","address","submitHandler","e","preventDefault","type","payload","localStorage","setItem","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport CheckoutSteps from './CheckoutSteps';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from './Store';\r\n\r\nfunction PaymentMethodScreen() {\r\n  const navigate = useNavigate();\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const {\r\n    cart: { shippingAddress, paymentMethod },\r\n  } = state;\r\n\r\n  const [paymentMethodName, setPaymentMethod] = useState(\r\n    paymentMethod || 'PayPal'\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      navigate('/shipping');\r\n    }\r\n  }, [shippingAddress, navigate]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    ctxDispatch({ type: 'SAVE_PAYMENT_METHOD', payload: paymentMethodName });\r\n    localStorage.setItem('paymentMethod', paymentMethodName);\r\n    navigate('/placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"container small-container\">\r\n        <Helmet>\r\n          <title>Payment Method</title>\r\n        </Helmet>\r\n        <h1 className=\"my-3\">Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"PayPal\"\r\n              label=\"PayPal\"\r\n              value=\"PayPal\"\r\n              checked={paymentMethodName === 'PayPal'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Form.Check\r\n              type=\"radio\"\r\n              id=\"Stripe\"\r\n              label=\"Stripe\"\r\n              value=\"Stripe\"\r\n              checked={paymentMethodName === 'Stripe'}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <Button type=\"submit\">Continue</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentMethodScreen;\r\n"]},"metadata":{},"sourceType":"module"}